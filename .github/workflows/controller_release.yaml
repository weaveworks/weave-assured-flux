name: Controller Release

on:
  workflow_call:
    inputs:
      controller:
        required: true
        type: string
      version:
        required: true
        type: string
    secrets:
      ghcrToken:
        required: true
    outputs:
      image_url:
        value: ${{ jobs.release-controller.outputs.image_url }}
      image_digest:
        value: ${{ jobs.release-controller.outputs.image_digest }}
jobs:
  release-controller:
    outputs:
      image_url: ${{ steps.slsa.outputs.image_url }}
      image_digest: ${{ steps.slsa.outputs.image_digest }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Kustomize
        uses: fluxcd/pkg/actions/kustomize@main
      - name: install stgit
        shell: bash
        run: |
          sudo apt-get install -y stgit
          git config --global user.name "Soule BA"
          git config --global user.email "soule@weave.works"
      - name: Setup QEMU
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2.10.0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: weave-ghcr-bot
          password: ${{ secrets.ghcrToken }}
      - name: Clone and patch repo
        id: patch
        run: |
          ln -s patches-flux-${{ inputs.version }} patches-flux
          rm -rf ${{ inputs.controller }} || true
          source ./patches-flux/VERSION
          BASE_VERSION=$(eval "echo \${$(echo ${{ inputs.controller }} | tr '-' '_' | tr '[a-z]' '[A-Z]')_BASE_VERSION}")
          SUFFIX_VERSION=$(eval "echo \${$(echo ${{ inputs.controller }} | tr '-' '_' | tr '[a-z]' '[A-Z]')_SUFFIX_VERSION}")
          if [[ "$SUFFIX_VERSION" =~ ^wa[.][0-9]+$ ]]; then
            VERSION=${BASE_VERSION}-${SUFFIX_VERSION}
          else
            VERSION=${BASE_VERSION}-wa
          fi
          bash -x ./scripts/patch_repo.sh "https://github.com/fluxcd/${{ inputs.controller }}.git" ${{ inputs.controller }} ${BASE_VERSION} 
          unlink patches-flux
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "base_version=${BASE_VERSION}" >> $GITHUB_OUTPUT
      - name: Generate images meta
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 # v4.6.0
        with:
          images: |
            ghcr.io/weaveworks/${{ inputs.controller }}
          tags: |
            type=raw,value=${{ steps.patch.outputs.version }}
      - name: Publish images
        id: build-push
        uses: docker/build-push-action@0a97817b6ade9f46837855d676c4cca3a2471fc9 # v4.2.1
        with:
          sbom: true
          provenance: true
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: ./${{ inputs.controller }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - uses: sigstore/cosign-installer@11086d25041f77fe8fe7b9ea4e48e3b9192b8f19 # v3.1.2
      - name: Sign images
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign sign --yes ghcr.io/weaveworks/${{ inputs.controller }}@${{ steps.build-push.outputs.digest }}
      - name: Generate release artifacts
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          mkdir -p config/release
          sed -i "s/${{ steps.patch.outputs.base_version }}/${{ steps.patch.outputs.version }}/g" ./${{ inputs.controller }}/config/manager/kustomization.yaml
          kustomize build ./${{ inputs.controller }}/config/crd > ./config/release/${{ inputs.controller }}.crds.yaml
          kustomize build ./${{ inputs.controller }}/config/manager > ./config/release/${{ inputs.controller}}.deployment.yaml
      - name: Upload release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.controller }}
          path: ./config/release
          retention-days: 1
      - name: Generate SLSA metadata
        id: slsa
        run: |
          image_url=ghcr.io/weaveworks/${{ inputs.controller }}:${{ steps.patch.outputs.version }}
          echo "image_url=$image_url" >> $GITHUB_OUTPUT
          
          image_digest=${{ steps.build-push.outputs.digest }}
          echo "image_digest=$image_digest" >> $GITHUB_OUTPUT
